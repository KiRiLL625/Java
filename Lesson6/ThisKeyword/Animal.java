public class Animal{
    private String name;
    private int age;
    public Animal(String name, int age){
        /*
        С this также есть два способа.

        this.variableName
        this.methodName

        Сверху - мы обращаемся к переменным или методам текущего объекта.
        Это бывает полезно, когда в параметры метода или конструктора передаются
        переменные, имя которых совпадает с переменными класса.

        В нашем случае: в параметрах конструктора (сверху) написаны переменные
        name, age. Переменные класса точно также называются. Поэтому внизу слева
        от знака равно мы пишем, что переменная нашего класса будет равна переменной,
        которую мы передаём. В среде разработки эти переменные выделяются разными цветами
        для отличия.
         */
        this.name = name;
        this.age = age;
    }
    public Animal(){
        /*
        Второй вариант - вызов конструктора текущего класса
        в другом конструкторе.
        Зачем это нужно? Представим себе, что наш класс содержит 10
        переменных и их все надо заполнить. Тогда надо на каждой отдельной
        строке писать имя переменной и её значение (в конструкторе по умолчанию,
        то есть без параметров). This нас спасает от этого: мы можем просто
        написать this(parameters) и внутри скобок написать сразу значения -
        так код будем намного компактнее.

        Значения переменных должны идти строго в том порядке, в котором они
        идут в другом конструкторе. У нас в конструкторе сверху написано сначала
        name, потом age. Именно в таком порядке их надо передавать в this().
        
        Если в классе один конструктор, то this() использовать нельзя.
         */
        this("Boba", 3);
    }
    public void say(){
        System.out.println("Animal says");
    }
    public String getName(){
        return name;
    }
    public int getAge(){
        return age;
    }
    public void play(){
        System.out.println("I'm playing");
    }
}
